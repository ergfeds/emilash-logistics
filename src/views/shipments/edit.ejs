<% layout('layouts/admin') %>

<style>
/* Enhanced styles for map and form */
.mapbox-gl-map {
    height: 400px;
    border-radius: 8px;
    border: 1px solid #dee2e6;
}
.marker-origin { background-color: #0d6efd; }
.marker-destination { background-color: #198754; }
.marker-current { background-color: #fd7e14; }
.form-section {
    background: #fff;
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}
.section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid #f0f0f0;
}
.section-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: #2c3e50;
    margin: 0;
}
.required-badge {
    font-size: 0.75rem;
    color: #6c757d;
    background: #f8f9fa;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
}
.geocoder-container {
    min-height: 40px;
}
.mapboxgl-ctrl-geocoder {
    width: 100%;
    max-width: none;
    box-shadow: none;
    border: 1px solid #ced4da;
}
.route-summary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
}
.route-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 0.9rem;
}
.route-info i {
    font-size: 1.2rem;
}
.status-timeline {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 8px;
}
.status-step {
    text-align: center;
    flex: 1;
    position: relative;
}
.status-step.completed .status-icon {
    background: #198754;
    color: white;
}
.status-step.current .status-icon {
    background: #fd7e14;
    color: white;
    animation: pulse 2s infinite;
}
.status-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #e9ecef;
    color: #6c757d;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 0.5rem;
}
@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(253, 126, 20, 0.7); }
    70% { box-shadow: 0 0 0 10px rgba(253, 126, 20, 0); }
    100% { box-shadow: 0 0 0 0 rgba(253, 126, 20, 0); }
}
</style>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 mb-0">✏️ Edit Shipment</h1>
            <p class="text-muted mt-1">Update shipment information and track current location</p>
        </div>
    </div>

    <!-- Tracking Info Bar -->
    <div class="alert alert-info mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <strong>Tracking Number:</strong> <%= shipment.tracking_number %>
                <span class="mx-3">|</span>
                <strong>Created:</strong> <%= new Date(shipment.created_at).toLocaleDateString() %>
                <span class="mx-3">|</span>
                <strong>Status:</strong> 
                <span class="badge" style="background-color: <%= shipment.status_color || '#6c757d' %>">
                    <%= shipment.status_name || 'Unknown' %>
                </span>
            </div>
            <a href="/admin/shipments/<%= shipment.id %>" class="btn btn-sm btn-outline-info">
                <i class="bi bi-eye"></i> View Details
            </a>
        </div>
    </div>

    <!-- Status Timeline -->
    <div class="form-section">
        <div class="section-header">
            <h5 class="section-title">
                <i class="bi bi-diagram-3-fill text-primary me-2"></i>Shipment Progress
            </h5>
        </div>
        <div class="status-timeline">
            <div class="status-step <%= shipment.current_status_id >= 1 ? 'completed' : '' %> <%= shipment.current_status_id == 1 ? 'current' : '' %>">
                <div class="status-icon"><i class="bi bi-clipboard-check"></i></div>
                <div>Order Received</div>
            </div>
            <div class="status-step <%= shipment.current_status_id >= 2 ? 'completed' : '' %> <%= shipment.current_status_id == 2 ? 'current' : '' %>">
                <div class="status-icon"><i class="bi bi-bag-check"></i></div>
                <div>Picked Up</div>
            </div>
            <div class="status-step <%= shipment.current_status_id >= 4 ? 'completed' : '' %> <%= shipment.current_status_id == 4 ? 'current' : '' %>">
                <div class="status-icon"><i class="bi bi-truck"></i></div>
                <div>In Transit</div>
            </div>
            <div class="status-step <%= shipment.current_status_id >= 6 ? 'completed' : '' %> <%= shipment.current_status_id == 6 ? 'current' : '' %>">
                <div class="status-icon"><i class="bi bi-bicycle"></i></div>
                <div>Out for Delivery</div>
            </div>
            <div class="status-step <%= shipment.current_status_id >= 7 ? 'completed' : '' %> <%= shipment.current_status_id == 7 ? 'current' : '' %>">
                <div class="status-icon"><i class="bi bi-check-circle"></i></div>
                <div>Delivered</div>
            </div>
        </div>
    </div>

    <!-- Live Route Map -->
    <div class="form-section">
        <div class="section-header">
            <h5 class="section-title">
                <i class="bi bi-geo-alt-fill text-primary me-2"></i>Live Route & Current Location
            </h5>
            <button type="button" class="btn btn-sm btn-outline-primary" onclick="refreshMap()">
                <i class="bi bi-arrow-clockwise"></i> Refresh Map
            </button>
        </div>
        <div id="routeMap" class="mapbox-gl-map mb-3"></div>
        <div id="routeSummary" class="route-summary">
            <div class="route-info">
                <i class="bi bi-pin-map-fill"></i>
                <span>From: <strong id="routeOrigin"><%= shipment.origin || '--' %></strong></span>
                <i class="bi bi-arrow-right mx-2"></i>
                <span>To: <strong id="routeDestination"><%= shipment.destination || '--' %></strong></span>
                <span class="ms-auto">
                    <i class="bi bi-geo-fill me-1"></i>
                    Current: <strong id="routeCurrent"><%= shipment.current_location || 'Not set' %></strong>
                </span>
            </div>
        </div>
    </div>

    <form method="post" action="/admin/shipments/<%= shipment.id %>?_method=PUT" id="shipmentForm">
        
        <!-- Current Location Update -->
        <div class="form-section">
            <div class="section-header">
                <h5 class="section-title">
                    <i class="bi bi-crosshair text-warning me-2"></i>Update Current Location
                </h5>
                <span class="badge bg-warning text-dark">Admin Only</span>
            </div>
            
            <div class="row g-3">
                <div class="col-md-6">
                    <label class="form-label">Current Status *</label>
                    <select name="current_status_id" class="form-select" required>
                        <% if (typeof statuses !== 'undefined' && statuses) { %>
                            <% statuses.forEach(status => { %>
                                <option value="<%= status.id %>" <%= Number(shipment.current_status_id) === status.id ? 'selected' : '' %>>
                                    <%= status.name %>
                                </option>
                            <% }) %>
                        <% } %>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Current Location <small class="text-muted">(Search to update)</small></label>
                    <div id="currentLocationGeocoder" class="geocoder-container"></div>
                    <input type="hidden" id="current_location" name="current_location" value="<%= shipment.current_location || '' %>">
                    <input type="hidden" id="current_lat" name="current_lat" value="<%= shipment.current_lat || '' %>">
                    <input type="hidden" id="current_lng" name="current_lng" value="<%= shipment.current_lng || '' %>">
                </div>
                <div class="col-12">
                    <label class="form-label">Status Update Note</label>
                    <input type="text" name="status_note" class="form-control" placeholder="Optional note for this status update">
                </div>
            </div>
        </div>
        
        <!-- Sender Information -->
        <div class="form-section">
            <div class="section-header">
                <h5 class="section-title">
                    <i class="bi bi-person-fill text-info me-2"></i>Sender Information
                </h5>
                <span class="required-badge">* Required fields</span>
            </div>
            
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Full Name *</label>
                    <input type="text" name="sender_name" class="form-control" required value="<%= shipment.sender_name %>">
                </div>
	<div class="col-md-4">
                    <label class="form-label">Company</label>
                    <input type="text" name="sender_company" class="form-control" value="<%= shipment.sender_company || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Email *</label>
                    <input type="email" name="sender_email" class="form-control" required value="<%= shipment.sender_email || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Phone *</label>
                    <input type="tel" name="sender_phone" class="form-control" required value="<%= shipment.sender_phone || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Alternative Phone</label>
                    <input type="tel" name="sender_alt_phone" class="form-control" value="<%= shipment.sender_alt_phone || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Country *</label>
                    <select name="sender_country" id="senderCountry" class="form-select" required>
                        <option value="US" <%= shipment.sender_country === 'US' ? 'selected' : '' %>>United States</option>
                        <option value="CA" <%= shipment.sender_country === 'CA' ? 'selected' : '' %>>Canada</option>
                        <option value="MX" <%= shipment.sender_country === 'MX' ? 'selected' : '' %>>Mexico</option>
                        <option value="GB" <%= shipment.sender_country === 'GB' ? 'selected' : '' %>>United Kingdom</option>
                        <option value="FR" <%= shipment.sender_country === 'FR' ? 'selected' : '' %>>France</option>
                        <option value="DE" <%= shipment.sender_country === 'DE' ? 'selected' : '' %>>Germany</option>
                        <option value="AU" <%= shipment.sender_country === 'AU' ? 'selected' : '' %>>Australia</option>
                        <option value="JP" <%= shipment.sender_country === 'JP' ? 'selected' : '' %>>Japan</option>
                        <option value="CN" <%= shipment.sender_country === 'CN' ? 'selected' : '' %>>China</option>
                        <option value="IN" <%= shipment.sender_country === 'IN' ? 'selected' : '' %>>India</option>
                    </select>
                </div>
                
                <div class="col-12">
                    <label class="form-label">Full Address * <small class="text-muted">(Search to change)</small></label>
                    <div id="senderGeocoder" class="geocoder-container"></div>
                    <input type="hidden" id="sender_address" name="sender_address" value="<%= shipment.sender_address || '' %>" required>
                    <input type="hidden" id="sender_lat" name="sender_lat" value="<%= shipment.sender_lat || '' %>">
                    <input type="hidden" id="sender_lng" name="sender_lng" value="<%= shipment.sender_lng || '' %>">
                    <div class="form-text">Current: <%= shipment.sender_address || 'Not set' %></div>
                </div>

                <div class="col-md-3">
                    <label class="form-label">City *</label>
                    <input type="text" id="sender_city" name="sender_city" class="form-control" required value="<%= shipment.sender_city || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">State/Province *</label>
                    <input type="text" id="sender_state" name="sender_state" class="form-control" required value="<%= shipment.sender_state || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Postal Code *</label>
                    <input type="text" id="sender_postal_code" name="sender_postal_code" class="form-control" required value="<%= shipment.sender_postal_code || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Apt/Suite/Unit</label>
                    <input type="text" name="sender_unit" class="form-control" value="<%= shipment.sender_unit || '' %>">
                </div>
            </div>
        </div>

        <!-- Receiver Information -->
        <div class="form-section">
            <div class="section-header">
                <h5 class="section-title">
                    <i class="bi bi-person-check-fill text-success me-2"></i>Receiver Information
                </h5>
                <span class="required-badge">* Required fields</span>
            </div>
            
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Full Name *</label>
                    <input type="text" name="receiver_name" class="form-control" required value="<%= shipment.receiver_name %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Company</label>
                    <input type="text" name="receiver_company" class="form-control" value="<%= shipment.receiver_company || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Email *</label>
                    <input type="email" name="receiver_email" class="form-control" required value="<%= shipment.receiver_email || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Phone *</label>
                    <input type="tel" name="receiver_phone" class="form-control" required value="<%= shipment.receiver_phone || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Alternative Phone</label>
                    <input type="tel" name="receiver_alt_phone" class="form-control" value="<%= shipment.receiver_alt_phone || '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Country *</label>
                    <select name="receiver_country" id="receiverCountry" class="form-select" required>
                        <option value="US" <%= shipment.receiver_country === 'US' ? 'selected' : '' %>>United States</option>
                        <option value="CA" <%= shipment.receiver_country === 'CA' ? 'selected' : '' %>>Canada</option>
                        <option value="MX" <%= shipment.receiver_country === 'MX' ? 'selected' : '' %>>Mexico</option>
                        <option value="GB" <%= shipment.receiver_country === 'GB' ? 'selected' : '' %>>United Kingdom</option>
                        <option value="FR" <%= shipment.receiver_country === 'FR' ? 'selected' : '' %>>France</option>
                        <option value="DE" <%= shipment.receiver_country === 'DE' ? 'selected' : '' %>>Germany</option>
                        <option value="AU" <%= shipment.receiver_country === 'AU' ? 'selected' : '' %>>Australia</option>
                        <option value="JP" <%= shipment.receiver_country === 'JP' ? 'selected' : '' %>>Japan</option>
                        <option value="CN" <%= shipment.receiver_country === 'CN' ? 'selected' : '' %>>China</option>
                        <option value="IN" <%= shipment.receiver_country === 'IN' ? 'selected' : '' %>>India</option>
                    </select>
	</div>
                
	<div class="col-12">
                    <label class="form-label">Full Address * <small class="text-muted">(Search to change)</small></label>
                    <div id="receiverGeocoder" class="geocoder-container"></div>
                    <input type="hidden" id="receiver_address" name="receiver_address" value="<%= shipment.receiver_address || '' %>" required>
                    <input type="hidden" id="receiver_lat" name="receiver_lat" value="<%= shipment.receiver_lat || '' %>">
                    <input type="hidden" id="receiver_lng" name="receiver_lng" value="<%= shipment.receiver_lng || '' %>">
                    <div class="form-text">Current: <%= shipment.receiver_address || 'Not set' %></div>
                </div>

                <div class="col-md-3">
                    <label class="form-label">City *</label>
                    <input type="text" id="receiver_city" name="receiver_city" class="form-control" required value="<%= shipment.receiver_city || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">State/Province *</label>
                    <input type="text" id="receiver_state" name="receiver_state" class="form-control" required value="<%= shipment.receiver_state || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Postal Code *</label>
                    <input type="text" id="receiver_postal_code" name="receiver_postal_code" class="form-control" required value="<%= shipment.receiver_postal_code || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Apt/Suite/Unit</label>
                    <input type="text" name="receiver_unit" class="form-control" value="<%= shipment.receiver_unit || '' %>">
                </div>
            </div>
        </div>

        <!-- Package Details -->
        <div class="form-section">
            <div class="section-header">
                <h5 class="section-title">
                    <i class="bi bi-box-seam-fill text-warning me-2"></i>Package Details
                </h5>
                <span class="required-badge">* Required fields</span>
            </div>
            
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Package Type *</label>
                    <select name="package_type" id="packageType" class="form-select" required>
                        <option value="general" <%= shipment.package_type === 'general' ? 'selected' : '' %>>General Cargo</option>
                        <option value="documents" <%= shipment.package_type === 'documents' ? 'selected' : '' %>>Documents</option>
                        <option value="fragile" <%= shipment.package_type === 'fragile' ? 'selected' : '' %>>Fragile</option>
                        <option value="hazardous" <%= shipment.package_type === 'hazardous' ? 'selected' : '' %>>Hazardous Materials</option>
                        <option value="live_animal" <%= shipment.package_type === 'live_animal' ? 'selected' : '' %>>Live Animal</option>
                        <option value="perishable" <%= shipment.package_type === 'perishable' ? 'selected' : '' %>>Perishable</option>
                        <option value="electronics" <%= shipment.package_type === 'electronics' ? 'selected' : '' %>>Electronics</option>
                        <option value="clothing" <%= shipment.package_type === 'clothing' ? 'selected' : '' %>>Clothing & Textiles</option>
                        <option value="automotive" <%= shipment.package_type === 'automotive' ? 'selected' : '' %>>Automotive Parts</option>
                        <option value="pharmaceutical" <%= shipment.package_type === 'pharmaceutical' ? 'selected' : '' %>>Pharmaceutical</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Service Type *</label>
                    <select name="service_type" class="form-select" required>
                        <option value="standard" <%= shipment.service_type === 'standard' ? 'selected' : '' %>>Standard (5-7 days)</option>
                        <option value="express" <%= shipment.service_type === 'express' ? 'selected' : '' %>>Express (2-3 days)</option>
                        <option value="overnight" <%= shipment.service_type === 'overnight' ? 'selected' : '' %>>Overnight (Next day)</option>
                        <option value="air_freight" <%= shipment.service_type === 'air_freight' ? 'selected' : '' %>>Air Freight</option>
                        <option value="sea_freight" <%= shipment.service_type === 'sea_freight' ? 'selected' : '' %>>Sea Freight</option>
                        <option value="land_freight" <%= shipment.service_type === 'land_freight' ? 'selected' : '' %>>Land Freight</option>
                        <option value="live_animal" <%= shipment.service_type === 'live_animal' ? 'selected' : '' %>>Live Animal Transport</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Priority Level *</label>
                    <select name="priority" class="form-select" required>
                        <option value="low" <%= shipment.priority === 'low' ? 'selected' : '' %>>Low</option>
                        <option value="normal" <%= shipment.priority === 'normal' ? 'selected' : '' %>>Normal</option>
                        <option value="high" <%= shipment.priority === 'high' ? 'selected' : '' %>>High</option>
                        <option value="urgent" <%= shipment.priority === 'urgent' ? 'selected' : '' %>>Urgent</option>
                    </select>
                </div>

                <div class="col-md-8">
                    <label class="form-label">Package Description *</label>
                    <textarea name="package_description" class="form-control" rows="2" required><%= shipment.package_description || '' %></textarea>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Quantity</label>
                    <input type="number" name="package_quantity" class="form-control" min="1" value="<%= shipment.package_quantity || 1 %>">
                </div>

                <div class="col-md-3">
                    <label class="form-label">Weight (lbs) *</label>
                    <input type="number" step="0.01" name="package_weight_lbs" id="weightLbs" class="form-control" required value="<%= shipment.package_weight ? (shipment.package_weight * 2.20462).toFixed(2) : '' %>">
                    <small class="text-muted">Auto-converts to kg</small>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Length (inches)</label>
                    <input type="number" step="0.01" name="package_length" class="form-control" value="<%= shipment.package_length || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Width (inches)</label>
                    <input type="number" step="0.01" name="package_width" class="form-control" value="<%= shipment.package_width || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Height (inches)</label>
                    <input type="number" step="0.01" name="package_height" class="form-control" value="<%= shipment.package_height || '' %>">
                </div>

                <div class="col-md-3">
                    <label class="form-label">Declared Value</label>
                    <input type="number" step="0.01" name="package_value" class="form-control" value="<%= shipment.package_value || '' %>">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Currency</label>
                    <select name="declared_currency" class="form-select">
                        <option value="USD" <%= shipment.declared_currency === 'USD' ? 'selected' : '' %>>USD</option>
                        <option value="EUR" <%= shipment.declared_currency === 'EUR' ? 'selected' : '' %>>EUR</option>
                        <option value="GBP" <%= shipment.declared_currency === 'GBP' ? 'selected' : '' %>>GBP</option>
                        <option value="CAD" <%= shipment.declared_currency === 'CAD' ? 'selected' : '' %>>CAD</option>
                        <option value="AUD" <%= shipment.declared_currency === 'AUD' ? 'selected' : '' %>>AUD</option>
                        <option value="JPY" <%= shipment.declared_currency === 'JPY' ? 'selected' : '' %>>JPY</option>
                        <option value="CNY" <%= shipment.declared_currency === 'CNY' ? 'selected' : '' %>>CNY</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Insurance Required?</label>
                    <select name="insurance_required" class="form-select">
                        <option value="0" <%= !shipment.insurance_required ? 'selected' : '' %>>No</option>
                        <option value="1" <%= shipment.insurance_required ? 'selected' : '' %>>Yes</option>
                    </select>
	</div>
	<div class="col-md-3">
                    <label class="form-label">Insurance Value</label>
                    <input type="number" step="0.01" name="insurance_value" class="form-control" value="<%= shipment.insurance_value || '' %>">
                </div>
            </div>

            <!-- Special Handling Options -->
            <div class="row g-3 mt-3" id="specialHandlingSection" style="<%= ['live_animal', 'perishable', 'pharmaceutical', 'hazardous', 'fragile'].includes(shipment.package_type) ? '' : 'display:none;' %>">
                <div class="col-12">
                    <h6 class="text-primary">Special Handling Requirements</h6>
                    <hr>
                </div>
                
                <!-- Live Animal Fields -->
                <div class="live-animal-fields" style="<%= shipment.package_type === 'live_animal' ? '' : 'display:none;' %>">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Animal Species</label>
                            <input type="text" name="animal_species" class="form-control" value="<%= shipment.animal_species || '' %>">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Health Certificate</label>
                            <select name="animal_health_certificate" class="form-select">
                                <option value="0" <%= !shipment.animal_health_certificate ? 'selected' : '' %>>No</option>
                                <option value="1" <%= shipment.animal_health_certificate ? 'selected' : '' %>>Yes</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Special Care Notes</label>
                            <input type="text" name="animal_care_notes" class="form-control" value="<%= shipment.animal_care_notes || '' %>">
                        </div>
                    </div>
                </div>

                <!-- Temperature Control -->
                <div class="temp-control-fields" style="<%= ['perishable', 'pharmaceutical'].includes(shipment.package_type) ? '' : 'display:none;' %>">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Temperature Controlled</label>
                            <select name="temperature_controlled" class="form-select">
                                <option value="0" <%= !shipment.temperature_controlled ? 'selected' : '' %>>No</option>
                                <option value="1" <%= shipment.temperature_controlled ? 'selected' : '' %>>Yes</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Min Temperature (°F)</label>
                            <input type="number" name="temperature_min" class="form-control" value="<%= shipment.temperature_min ? (shipment.temperature_min * 9/5 + 32).toFixed(0) : '' %>">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Max Temperature (°F)</label>
                            <input type="number" name="temperature_max" class="form-control" value="<%= shipment.temperature_max ? (shipment.temperature_max * 9/5 + 32).toFixed(0) : '' %>">
                        </div>
                    </div>
                </div>

                <!-- Hazardous Materials -->
                <div class="hazmat-fields" style="<%= shipment.package_type === 'hazardous' ? '' : 'display:none;' %>">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Dangerous Goods</label>
                            <select name="dangerous_goods" class="form-select">
                                <option value="0" <%= !shipment.dangerous_goods ? 'selected' : '' %>>No</option>
                                <option value="1" <%= shipment.dangerous_goods ? 'selected' : '' %>>Yes</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">UN Number</label>
                            <input type="text" name="un_number" class="form-control" value="<%= shipment.un_number || '' %>">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Hazard Class</label>
                            <input type="text" name="hazard_class" class="form-control" value="<%= shipment.hazard_class || '' %>">
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <label class="form-label">Special Handling Required</label>
                    <select name="special_handling_required" class="form-select">
                        <option value="0" <%= !shipment.special_handling_required ? 'selected' : '' %>>No</option>
                        <option value="1" <%= shipment.special_handling_required ? 'selected' : '' %>>Yes</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">HS Code (for customs)</label>
                    <input type="text" name="hs_code" class="form-control" value="<%= shipment.hs_code || '' %>">
                </div>
            </div>
        </div>

        <!-- Shipping Schedule -->
        <div class="form-section">
            <div class="section-header">
                <h5 class="section-title">
                    <i class="bi bi-calendar-event-fill text-primary me-2"></i>Shipping Schedule
                </h5>
            </div>
            
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Pickup Date</label>
                    <input type="datetime-local" name="pickup_date" class="form-control" value="<%= shipment.pickup_date ? new Date(shipment.pickup_date - (new Date().getTimezoneOffset()*60000)).toISOString().slice(0,16) : '' %>">
	</div>
	<div class="col-md-4">
                    <label class="form-label">Expected Delivery Date</label>
		<input type="datetime-local" name="eta" class="form-control" value="<%= shipment.eta ? new Date(shipment.eta - (new Date().getTimezoneOffset()*60000)).toISOString().slice(0,16) : '' %>">
	</div>
                <div class="col-md-4">
                    <label class="form-label">Incoterms</label>
                    <select name="incoterms" class="form-select">
                        <option value="DAP" <%= shipment.incoterms === 'DAP' ? 'selected' : '' %>>DAP - Delivered at Place</option>
                        <option value="DDP" <%= shipment.incoterms === 'DDP' ? 'selected' : '' %>>DDP - Delivered Duty Paid</option>
                        <option value="EXW" <%= shipment.incoterms === 'EXW' ? 'selected' : '' %>>EXW - Ex Works</option>
                        <option value="FCA" <%= shipment.incoterms === 'FCA' ? 'selected' : '' %>>FCA - Free Carrier</option>
                        <option value="CPT" <%= shipment.incoterms === 'CPT' ? 'selected' : '' %>>CPT - Carriage Paid To</option>
                        <option value="CIP" <%= shipment.incoterms === 'CIP' ? 'selected' : '' %>>CIP - Carriage Insurance Paid</option>
                        <option value="DPU" <%= shipment.incoterms === 'DPU' ? 'selected' : '' %>>DPU - Delivered at Place Unloaded</option>
                        <option value="FAS" <%= shipment.incoterms === 'FAS' ? 'selected' : '' %>>FAS - Free Alongside Ship</option>
                        <option value="FOB" <%= shipment.incoterms === 'FOB' ? 'selected' : '' %>>FOB - Free on Board</option>
                        <option value="CFR" <%= shipment.incoterms === 'CFR' ? 'selected' : '' %>>CFR - Cost and Freight</option>
                        <option value="CIF" <%= shipment.incoterms === 'CIF' ? 'selected' : '' %>>CIF - Cost Insurance Freight</option>
		</select>
	</div>

                <div class="col-md-6">
                    <label class="form-label">Delivery Window Start</label>
                    <input type="datetime-local" name="delivery_window_start" class="form-control" value="<%= shipment.delivery_window_start ? new Date(shipment.delivery_window_start - (new Date().getTimezoneOffset()*60000)).toISOString().slice(0,16) : '' %>">
                </div>
                <div class="col-md-6">
                    <label class="form-label">Delivery Window End</label>
                    <input type="datetime-local" name="delivery_window_end" class="form-control" value="<%= shipment.delivery_window_end ? new Date(shipment.delivery_window_end - (new Date().getTimezoneOffset()*60000)).toISOString().slice(0,16) : '' %>">
                </div>

	<div class="col-12">
                    <label class="form-label">Special Instructions</label>
                    <textarea name="special_instructions" class="form-control" rows="3"><%= shipment.special_instructions || '' %></textarea>
                </div>
            </div>
        </div>

        <!-- Hidden fields for auto-generated values -->
        <input type="hidden" id="origin" name="origin" value="<%= shipment.origin || '' %>">
        <input type="hidden" id="destination" name="destination" value="<%= shipment.destination || '' %>">
        <input type="hidden" id="package_weight" name="package_weight" value="<%= shipment.package_weight || '' %>">
        <input type="hidden" id="package_dimensions" name="package_dimensions" value="<%= shipment.package_dimensions || '' %>">

        <!-- Action Buttons -->
        <div class="d-flex justify-content-between align-items-center mt-4">
            <a href="/admin/shipments/<%= shipment.id %>" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Cancel
            </a>
            <div>
                <button type="button" class="btn btn-outline-primary me-2" onclick="validateForm()">
                    <i class="bi bi-check-circle me-2"></i>Validate
                </button>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save me-2"></i>Save Changes
                </button>
            </div>
	</div>
</form>
</div>

<script>
// Global map and marker variables
let routeMap;
let originMarker, destinationMarker, currentMarker;
let routeLine;
let senderGeocoder, receiverGeocoder, currentGeocoder;

// Store initial values
const initialValues = {
    senderLat: <%= shipment.sender_lat || 'null' %>,
    senderLng: <%= shipment.sender_lng || 'null' %>,
    receiverLat: <%= shipment.receiver_lat || 'null' %>,
    receiverLng: <%= shipment.receiver_lng || 'null' %>,
    currentLat: <%= shipment.current_lat || 'null' %>,
    currentLng: <%= shipment.current_lng || 'null' %>
};

document.addEventListener('DOMContentLoaded', function() {
    // Check if Mapbox is available
    if (!window.mapboxgl || !window.MAPBOX_TOKEN) {
        console.warn('Mapbox not available');
        return;
    }
    
	mapboxgl.accessToken = window.MAPBOX_TOKEN;
    
    // Initialize the route map
    initializeRouteMap();
    
    // Initialize geocoders for address autocomplete
    initializeGeocoders();
    
    // Setup form handlers
    setupFormHandlers();
    
    // Load existing markers if coordinates exist
    loadExistingMarkers();
});

function initializeRouteMap() {
    const centerLng = initialValues.senderLng || initialValues.receiverLng || -98.5795;
    const centerLat = initialValues.senderLat || initialValues.receiverLat || 39.8283;
    
    routeMap = new mapboxgl.Map({
        container: 'routeMap',
        style: 'mapbox://styles/mapbox/streets-v12',
        center: [centerLng, centerLat],
        zoom: 4
    });
    
    routeMap.addControl(new mapboxgl.NavigationControl(), 'top-right');
    routeMap.addControl(new mapboxgl.FullscreenControl(), 'bottom-right');
    
    // Initialize route line source
    routeMap.on('load', function() {
        routeMap.addSource('route', {
            'type': 'geojson',
            'data': {
                'type': 'Feature',
                'properties': {},
                'geometry': {
                    'type': 'LineString',
                    'coordinates': []
                }
            }
        });
        
        routeMap.addLayer({
            'id': 'route',
            'type': 'line',
            'source': 'route',
            'layout': {
                'line-join': 'round',
                'line-cap': 'round'
            },
            'paint': {
                'line-color': '#0d6efd',
                'line-width': 4,
                'line-opacity': 0.75
            }
        });
        
        // Load existing route if we have coordinates
        if (initialValues.senderLat && initialValues.senderLng && initialValues.receiverLat && initialValues.receiverLng) {
            updateRoute();
        }
    });
}

function loadExistingMarkers() {
    // Add origin marker if exists
    if (initialValues.senderLat && initialValues.senderLng) {
        updateMapMarker('origin', [initialValues.senderLng, initialValues.senderLat], '<%= shipment.origin || "Origin" %>');
    }
    
    // Add destination marker if exists
    if (initialValues.receiverLat && initialValues.receiverLng) {
        updateMapMarker('destination', [initialValues.receiverLng, initialValues.receiverLat], '<%= shipment.destination || "Destination" %>');
    }
    
    // Add current location marker if exists
    if (initialValues.currentLat && initialValues.currentLng) {
        updateMapMarker('current', [initialValues.currentLng, initialValues.currentLat], '<%= shipment.current_location || "Current Location" %>');
    }
}

function initializeGeocoders() {
    // Sender address geocoder
    senderGeocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl,
        marker: false,
        placeholder: 'Search for new sender address...',
        countries: document.getElementById('senderCountry').value || 'US'
    });
    
    senderGeocoder.addTo('#senderGeocoder');
    
    senderGeocoder.on('result', function(e) {
        const result = e.result;
        updateSenderAddress(result);
        updateMapMarker('origin', result.center, result.place_name);
        updateRoute();
    });
    
    // Receiver address geocoder
    receiverGeocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl,
        marker: false,
        placeholder: 'Search for new receiver address...',
        countries: document.getElementById('receiverCountry').value || 'US'
    });
    
    receiverGeocoder.addTo('#receiverGeocoder');
    
    receiverGeocoder.on('result', function(e) {
        const result = e.result;
        updateReceiverAddress(result);
        updateMapMarker('destination', result.center, result.place_name);
        updateRoute();
    });
    
    // Current location geocoder
    currentGeocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl,
        marker: false,
        placeholder: 'Search for current location...'
    });
    
    currentGeocoder.addTo('#currentLocationGeocoder');
    
    currentGeocoder.on('result', function(e) {
        const result = e.result;
        document.getElementById('current_location').value = result.place_name;
        document.getElementById('current_lat').value = result.center[1];
        document.getElementById('current_lng').value = result.center[0];
        document.getElementById('routeCurrent').textContent = result.place_name;
        updateMapMarker('current', result.center, result.place_name);
    });
}

function updateSenderAddress(result) {
    // Update hidden fields
    document.getElementById('sender_address').value = result.place_name;
    document.getElementById('sender_lat').value = result.center[1];
    document.getElementById('sender_lng').value = result.center[0];
    
    // Parse and fill address components
    const context = result.context || [];
    let city = '', state = '', postalCode = '';
    
    // Extract from context
    context.forEach(item => {
        if (item.id.startsWith('place')) city = item.text;
        if (item.id.startsWith('region')) state = item.short_code ? item.short_code.replace('US-', '') : item.text;
        if (item.id.startsWith('postcode')) postalCode = item.text;
    });
    
    // Update form fields
    document.getElementById('sender_city').value = city || result.text || '';
    document.getElementById('sender_state').value = state;
    document.getElementById('sender_postal_code').value = postalCode;
    
    // Update origin field
    const origin = city && state ? `${city}, ${state}` : result.place_name;
    document.getElementById('origin').value = origin;
    
    // Update route summary
    document.getElementById('routeOrigin').textContent = origin;
}

function updateReceiverAddress(result) {
    // Update hidden fields
    document.getElementById('receiver_address').value = result.place_name;
    document.getElementById('receiver_lat').value = result.center[1];
    document.getElementById('receiver_lng').value = result.center[0];
    
    // Parse and fill address components
    const context = result.context || [];
    let city = '', state = '', postalCode = '';
    
    // Extract from context
    context.forEach(item => {
        if (item.id.startsWith('place')) city = item.text;
        if (item.id.startsWith('region')) state = item.short_code ? item.short_code.replace('US-', '') : item.text;
        if (item.id.startsWith('postcode')) postalCode = item.text;
    });
    
    // Update form fields
    document.getElementById('receiver_city').value = city || result.text || '';
    document.getElementById('receiver_state').value = state;
    document.getElementById('receiver_postal_code').value = postalCode;
    
    // Update destination field
    const destination = city && state ? `${city}, ${state}` : result.place_name;
    document.getElementById('destination').value = destination;
    
    // Update route summary
    document.getElementById('routeDestination').textContent = destination;
}

function updateMapMarker(type, coordinates, title) {
    // Remove existing marker if any
    if (type === 'origin' && originMarker) {
        originMarker.remove();
    } else if (type === 'destination' && destinationMarker) {
        destinationMarker.remove();
    } else if (type === 'current' && currentMarker) {
        currentMarker.remove();
    }
    
    // Create new marker
    const el = document.createElement('div');
    el.className = 'marker';
    el.style.width = '30px';
    el.style.height = '30px';
    el.style.borderRadius = '50%';
    el.style.border = '3px solid white';
    el.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';
    
    if (type === 'origin') {
        el.style.backgroundColor = '#0d6efd';
        originMarker = new mapboxgl.Marker(el)
            .setLngLat(coordinates)
            .setPopup(new mapboxgl.Popup({ offset: 25 }).setText(`Origin: ${title}`))
            .addTo(routeMap);
    } else if (type === 'destination') {
        el.style.backgroundColor = '#198754';
        destinationMarker = new mapboxgl.Marker(el)
            .setLngLat(coordinates)
            .setPopup(new mapboxgl.Popup({ offset: 25 }).setText(`Destination: ${title}`))
            .addTo(routeMap);
    } else if (type === 'current') {
        el.style.backgroundColor = '#fd7e14';
        currentMarker = new mapboxgl.Marker(el)
            .setLngLat(coordinates)
            .setPopup(new mapboxgl.Popup({ offset: 25 }).setText(`Current: ${title}`))
            .addTo(routeMap);
    }
}

async function updateRoute() {
    const senderLat = document.getElementById('sender_lat').value;
    const senderLng = document.getElementById('sender_lng').value;
    const receiverLat = document.getElementById('receiver_lat').value;
    const receiverLng = document.getElementById('receiver_lng').value;
    
    if (senderLat && senderLng && receiverLat && receiverLng) {
        // Update route line on map
        const coordinates = [
            [parseFloat(senderLng), parseFloat(senderLat)],
            [parseFloat(receiverLng), parseFloat(receiverLat)]
        ];
        
        if (routeMap.getSource('route')) {
            routeMap.getSource('route').setData({
                'type': 'Feature',
                'properties': {},
                'geometry': {
                    'type': 'LineString',
                    'coordinates': coordinates
                }
            });
        }
        
        // Fit map to show all markers
        const bounds = new mapboxgl.LngLatBounds();
        coordinates.forEach(coord => bounds.extend(coord));
        
        // Include current location if exists
        const currentLat = document.getElementById('current_lat').value;
        const currentLng = document.getElementById('current_lng').value;
        if (currentLat && currentLng) {
            bounds.extend([parseFloat(currentLng), parseFloat(currentLat)]);
        }
        
        routeMap.fitBounds(bounds, { padding: 100 });
        
        // Optional: Get actual route from Mapbox Directions API
        try {
            const response = await fetch(`https://api.mapbox.com/directions/v5/mapbox/driving/${senderLng},${senderLat};${receiverLng},${receiverLat}?geometries=geojson&access_token=${mapboxgl.accessToken}`);
            const data = await response.json();
            
            if (data.routes && data.routes[0]) {
                const route = data.routes[0];
                
                // Update route line with actual path
                routeMap.getSource('route').setData({
                    'type': 'Feature',
                    'properties': {},
                    'geometry': route.geometry
                });
            }
        } catch (error) {
            console.warn('Could not fetch route details:', error);
        }
    }
}

function setupFormHandlers() {
    // Convert pounds to kilograms
    document.getElementById('weightLbs').addEventListener('input', function() {
        const lbs = parseFloat(this.value) || 0;
        const kg = lbs * 0.453592;
        document.getElementById('package_weight').value = kg.toFixed(2);
    });
    
    // Calculate dimensions string
    ['package_length', 'package_width', 'package_height'].forEach(id => {
        const elem = document.querySelector(`[name="${id}"]`);
        if (elem) {
            elem.addEventListener('input', updateDimensions);
        }
    });
    
    // Package type change handler
    document.getElementById('packageType').addEventListener('change', function() {
        const specialSection = document.getElementById('specialHandlingSection');
        const liveAnimalFields = document.querySelector('.live-animal-fields');
        const tempControlFields = document.querySelector('.temp-control-fields');
        const hazmatFields = document.querySelector('.hazmat-fields');
        
        // Hide all special fields first
        if (liveAnimalFields) liveAnimalFields.style.display = 'none';
        if (tempControlFields) tempControlFields.style.display = 'none';
        if (hazmatFields) hazmatFields.style.display = 'none';
        
        // Show relevant fields based on package type
        if (this.value === 'live_animal') {
            specialSection.style.display = 'block';
            if (liveAnimalFields) liveAnimalFields.style.display = 'block';
        } else if (this.value === 'perishable' || this.value === 'pharmaceutical') {
            specialSection.style.display = 'block';
            if (tempControlFields) tempControlFields.style.display = 'block';
        } else if (this.value === 'hazardous') {
            specialSection.style.display = 'block';
            if (hazmatFields) hazmatFields.style.display = 'block';
        } else if (this.value === 'fragile') {
            specialSection.style.display = 'block';
        } else {
            specialSection.style.display = 'none';
        }
    });
    
    // Country change handlers to update geocoder
    document.getElementById('senderCountry').addEventListener('change', function() {
        if (senderGeocoder) {
            senderGeocoder.setCountries(this.value);
        }
    });
    
    document.getElementById('receiverCountry').addEventListener('change', function() {
        if (receiverGeocoder) {
            receiverGeocoder.setCountries(this.value);
        }
    });
}

function updateDimensions() {
    const length = document.querySelector('[name="package_length"]').value || 0;
    const width = document.querySelector('[name="package_width"]').value || 0;
    const height = document.querySelector('[name="package_height"]').value || 0;
    
    if (length && width && height) {
        document.getElementById('package_dimensions').value = `${length}x${width}x${height}`;
    }
}

function refreshMap() {
    if (routeMap) {
        routeMap.resize();
        updateRoute();
    }
}

function validateForm() {
    const form = document.getElementById('shipmentForm');
    const requiredFields = form.querySelectorAll('[required]');
    let isValid = true;
    let firstInvalid = null;
    
    requiredFields.forEach(field => {
        if (!field.value || field.value.trim() === '') {
            field.classList.add('is-invalid');
            isValid = false;
            if (!firstInvalid) firstInvalid = field;
        } else {
            field.classList.remove('is-invalid');
        }
    });
    
    if (!isValid) {
        firstInvalid.focus();
        alert('Please fill in all required fields marked with *');
    } else {
        alert('Form validation passed! Ready to submit.');
    }
    
    return isValid;
}
</script>
